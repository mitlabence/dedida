# initial version follows https://medium.com/@colonal/automating-flutter-builds-and-releases-with-github-actions-77ccf4a1ccdd
name: Build
on:
    push:
        branches:
            - dev
            - test
    pull_request:
        branches:
            - dev
            - test
jobs:
    build:
        name: Build & Release
        runs-on: macos-latest # want to release iOS version too
        permissions:
          contents: write
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Set up JDK 21
              uses: actions/setup-java@v3
              with:
                distribution: 'oracle'
                java-version: '21.0.5'
            - name: Set up flutter
              uses: subosito/flutter-action@v2
              with:
                    flutter-version: '3.27.1'
                    channel: 'stable'
            - name: Install dependencies
              run: flutter pub get
            # TODO: add decode keystore step
            - name: build APK
              run: flutter build apk --release
            - name: build AAB
              run: flutter build appbundle
            - name: build iOS
              run: flutter build ipa --no-codesign
            - name: Compress Archives and IPAs
              run: |
                cd build
                tar -czf ios_build.tar.gz ios
            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                name: Releases
                path: |
                  build/app/outputs/flutter-apk/app-release.apk
                  build/app/outputs/bundle/release/app-release.aab
                  build/ios_build.tar.gz
            - name: Extract version from pubspec.yaml
              id: extract_version
              run: |
                version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
                echo "VERSION=$version" >> $GITHUB_ENV
            - name: Check if tag exists
              id: check_tag
              run: |
               if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
                 echo "TAG_EXISTS=true" >> $GITHUB_ENV
               else
                 echo "TAG_EXISTS=false" >> $GITHUB_ENV
               fi
            - name: Modify Tag
              if: env.TAG_EXISTS == 'true'
              id: modify_tag
              run: |
                new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
                echo "VERSION=$new_version" >> $GITHUB_ENV
            - name: Create Release
              uses: ncipollo/release-action@v1
              with:
                artifacts: "build/app/outputs/flutter-apk/app-release.apk,build/app/outputs/bundle/release/app-release.aab,build/ios_build.tar.gz"
                tag: v${{ env.VERSION }}
                token: ${{ secrets.TOKEN }}
